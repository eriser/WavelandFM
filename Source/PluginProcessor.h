/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "FMSynth.h"


//==============================================================================
/**
*/
class WavelandFmAudioProcessor  : public AudioProcessor
{
public:
    //==============================================================================
    WavelandFmAudioProcessor();
    ~WavelandFmAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;
    void updateParameters ();

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

private:
    //==============================================================================
    
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (WavelandFmAudioProcessor)
    
    Synthesiser synth;
    
    struct paramStruc
    {
        String nameLong;
        String nameShort;
        float DefaultValue;
        AudioParameterFloat* param;
    };
    
    std::vector<paramStruc> OpParamVec
    {
        {"Attack",       "att", 0.01f, nullptr},
        {"Decay",        "dec", 0.01f, nullptr},
        {"Sustain",      "sus", 1.00f, nullptr},
        {"Release",      "rel", 0.10f, nullptr},
        {"DecayShape",   "dsh", 0.50f, nullptr},
        {"ReleaseShape", "rsh", 0.50f, nullptr},
        {"Tune",         "tun", 0.50f, nullptr}
    };
    
    struct OpStruct
    {
        String OpName;
        std::vector<paramStruc> Parms;
    };
    
    std::vector<OpStruct> Ops
    {
        {"Op1", OpParamVec},
        {"Op2", OpParamVec}
    };
public:
    std::vector<OpStruct> getOpArray()
    {
        return Ops;
    }

    void innitSynth();
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
